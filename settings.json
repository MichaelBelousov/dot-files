{
  "explorer.confirmDelete": false,
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "typescript.updateImportsOnFileMove.enabled": "always",
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.defaultFormatter": null
  },
  "git.path": "C:\\msys64\\usr\\bin\\git.exe",
  "breadcrumbs.enabled": true,
  "editor.minimap.enabled": false,
  "vim.leader": "-",
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["y", "p"], //plugin search
      "commands": ["copyRelativeFilePath"]
    },
    {
      "before": ["<leader>", "p", "s"], //plugin search
      "after": ["d", "d"]
    },
    {
      "before": ["<leader>", "p", "u"], //plugin update/sync
      "after": ["d", "d"]
    },
    {
      "before": ["<leader>", "F"], //toggle file tree
      "commands": ["revealInExplorer"]
    },
    {
      "before": ["<leader>", "f"], //toggle tag tree
      "commands": ["outline.focus"]
    },
    {
      "before": ["<leader>", "r", "e"], //open vimrc
      "commands": ["workbench.action.newWindow"],
      "args": [
        "c:\\users\\mike.belousov\\appdata\\roaming\\code\\user\\settings.json"
      ]
    },
    {
      "before": ["<leader>", "r", "s"], //source vimrc
      "commands": [":w"]
    },
    // move around
    {
      "before": ["<C-j>"],
      "after": ["d", "d", "p"]
    },
    {
      "before": ["<C-k>"],
      "after": ["d", "d", "k", "P"]
    },
    {
      "before": ["<C-l>"],
      "after": ["x", "p"]
    },
    {
      "before": ["<C-h>"],
      "after": ["x", "h", "h", "p"]
    },
    {
      "before": ["J"],
      "after": [")"]
    },
    {
      "before": ["K"],
      "after": ["("]
    },
    {
      "before": ["<leader>", "t"], //open terminal
      "commands": ["workbench.action.terminal.new"]
    },
    /*
    {
      "before": ["<leader>", "t"], //toggle terminal/debug console?
      "commands": ["workbench.action.terminal.new"],
      //"when": ""
    },
    */
    {
      "before": ["<leader>", "/"], //unhighlight searches
      "commands": [":nohl"]
    },
    {
      "before": ["<leader>", "B"], //jump to alternate buffer/file //XXX: not working rn
      "after": ["<C-tab>"]
    },
    {
      "before": ["<leader>", "b"], //jump to last area in buffer
      "after": ["`", "`"]
    },
    {
      "before": ["<leader>", "<space>"], //space around char
      "after": ["i", "<space>", "<esc>", "l", "a", "<space>", "<esc>"]
    },
    {
      "before": ["<leader>", "<cr>"], //space around line
      "after": ["O", "<esc>", "j", "o", "<esc>", "k"]
    },
    {
      "before": ["<leader>", "C"], //make comment
      "after": ["A", "<space>", "/", "/"]
    },
    {
      "before": ["<leader>", "c"], //make comment
      "after": ["I", "/", "/", "<esc>"],
    },
    {
      "before": ["<leader>", ":"], //show command pallete
      "commands": ["workbench.action.showCommands"]
    },
    {
      "before": ["g", "n", "e"],
      "commands": ["editor.action.marker.next"]
    },
    {
      "before": ["g", "p", "e"],
      "commands": ["editor.action.marker.prev"]
    }
  ],
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["<leader>", "c"], // toggle line comment
      "commands": ["editor.action.commentLine"]
    },
  ],
  //"terminal.integrated.shell.windows": "C:\\msys64\\usr\\bin\\bash.exe",
  "azureFunctions.showCoreToolsWarning": false,
  "peacock.favoriteColors": [
    {
      "name": "Angular Red",
      "value": "#b52e31"
    },
    {
      "name": "Auth0 Orange",
      "value": "#eb5424"
    },
    {
      "name": "Azure Blue",
      "value": "#007fff"
    },
    {
      "name": "C# Purple",
      "value": "#68217A"
    },
    {
      "name": "Gatsby Purple",
      "value": "#639"
    },
    {
      "name": "Go Cyan",
      "value": "#5dc9e2"
    },
    {
      "name": "Java Blue-Gray",
      "value": "#557c9b"
    },
    {
      "name": "JavaScript Yellow",
      "value": "#f9e64f"
    },
    {
      "name": "Mandalorian Blue",
      "value": "#1857a4"
    },
    {
      "name": "Node Green",
      "value": "#215732"
    },
    {
      "name": "React Blue",
      "value": "#00b3e6"
    },
    {
      "name": "Something Different",
      "value": "#832561"
    },
    {
      "name": "Vue Green",
      "value": "#42b883"
    }
  ],
  "team.showWelcomeMessage": false,
  //"vscode-neovim.neovimPath": "/usr/bin/nvim",
  //"vscode-neovim.escape": "ctrl+[",
  "vsicons.dontShowNewVersionMessage": true,
  "workbench.colorTheme": "Monokai Dimmed",
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "diffEditor.ignoreTrimWhitespace": true,
  "editor.formatOnSave": true,
  "team.appInsights.enabled": false,
  "telemetry.telemetryLevel": "crash",
  "gitlens.advanced.telemetry.enabled": false,
  "terminal.integrated.commandsToSkipShell": ["-workbench.action.quickOpen"],
  "debug.node.autoAttach": "disabled",
  "debug.javascript.usePreview": false,
  "python.showStartPage": false,
  "team.showFarewellMessage": false,
  "gitlens.codeLens.enabled": false,
  //"godot_tools.editor_path": "/home/mike/personal/debt-civ/godot/bin/godot.x11.tools.64.llvm",
  "godot_tools.editor_path": "/home/mike/.local/share/bin/Godot_v3.4-stable_x11.64",
  "testMate.cpp.log.userId": "dd852d0b3effb8d3ad7b41dc971c5086831de008",
  "testMate.cpp.log.logSentry": "enable",
  "C_Cpp.intelliSenseEngine": "Disabled",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook"
  },
  "workbench.sideBar.location": "right",
  // CodeLLDB extension settings
  "lldb.commandCompletions": false, // was causing crashes, this might fix...
  "lldb.launch.initCommands": [
    "script lldb.debugger.HandleCommand('command script import /home/mike/work/imodel02/bsitools/anycpu/BentleyLldbVisualizers.py')"
  ],
  "clangd.onConfigChanged": "restart",
  "[cpp]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd",
    "editor.formatOnSave": false
  },
  // (maybe?) needed to prevent xonsh from starting up for debug shells
  //"terminal.integrated.shell.linux": "/usr/bin/bash",
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "bash"
    },
    "zsh": {
      "path": "zsh"
    },
    "fish": {
      "path": "fish"
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    },
    "xonsh": {
      "path": "xonsh"
    }
  },
  "indentRainbow.ignoreErrorLanguages": ["markdown", "cpp", "python"],
  "editor.tabSize": 2,
  "editor.cursorStyle": "line",
  "editor.lineNumbers": "on",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",

  // font settings
  //"editor.fontFamily": ,
  //"editor.fontSize": 16,
  //"editor.lineHeight": 14 // 0
  // using different font (just in integrated terminal :) ) fixes underscore bug
  "terminal.integrated.fontFamily": "'Ubuntu Mono', 'monospace', monospace, 'Droid Sans Fallback'",
  "terminal.integrated.fontSize": 16,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "debug.allowBreakpointsEverywhere": true,
  "vim.useSystemClipboard": true,
  "zigLanguageClient.debugLog": false,
  "zigLanguageClient.disabled": false,
  "zig.buildOnSave": true,
  "zig.revealOutputChannelOnFormattingError": true,
  "zigLanguageClient.path": "/home/mike/personal/zig-master-0.10/zls/zls",
  "files.associations": {
    "**/azure-piplines/*.yaml": "azure-pipelines"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "workbench.startupEditor": "none"
}
